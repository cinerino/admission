{"version":3,"sources":["./app/modules/setting/components/pages/setting/setting.component.ts","./app/modules/setting/components/pages/setting/setting.component.html","./app/modules/setting/setting-routing.module.ts","./app/modules/setting/setting.module.ts"],"names":[],"mappings":"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","file":"modules-setting-setting-module.js","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { factory } from '@cinerino/sdk';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CountryISO, NgxIntlTelInputComponent, SearchCountryField, TooltipLabel, } from 'ngx-intl-tel-input';\nimport { Observable } from 'rxjs';\nimport { Models } from '../../../../..';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { ActionService, EpsonEPOSService, MasterService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\nimport { LibphonenumberFormatPipe } from '../../../../shared/pipes/libphonenumber-format.pipe';\n\n@Component({\n    selector: 'app-setting',\n    templateUrl: './setting.component.html',\n    styleUrls: ['./setting.component.scss']\n})\nexport class SettingComponent implements OnInit {\n    public settingForm: FormGroup;\n    public user: Observable<reducers.IUserState>;\n    public master: Observable<reducers.IMasterState>;\n    public error: Observable<string | null>;\n    public isLoading: Observable<boolean>;\n    public posList: { id: string; name: string; typeOf: string; }[];\n    public printers = Models.Util.Printer.printers;\n    public connectionType = Models.Util.Printer.ConnectionType;\n    public viewType = Models.Util.ViewType;\n    public theaters: factory.chevre.place.movieTheater.IPlaceWithoutScreeningRoom[];\n    public environment = getEnvironment();\n    public SearchCountryField = SearchCountryField;\n    public TooltipLabel = TooltipLabel;\n    public CountryISO = CountryISO;\n    @ViewChild('intlTelInput') private intlTelInput: NgxIntlTelInputComponent;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private store: Store<reducers.IState>,\n        private utilService: UtilService,\n        private actionService: ActionService,\n        private masterService: MasterService,\n        private translate: TranslateService,\n        private router: Router,\n        private epsonEPOSService: EpsonEPOSService\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public async ngOnInit() {\n        this.user = this.store.pipe(select(reducers.getUser));\n        this.error = this.store.pipe(select(reducers.getError));\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.posList = [];\n        this.theaters = [];\n        try {\n            this.theaters = await this.masterService.getTheaters();\n            await this.createSettlingForm();\n        } catch (error) {\n            console.error(error);\n            this.router.navigate(['/error']);\n        }\n        setTimeout(() => {\n            if (this.intlTelInput === undefined) {\n                return;\n            }\n            const findResult = this.intlTelInput.allCountries.find(c => c.iso2 === CountryISO.Japan);\n            if (findResult === undefined) {\n                return;\n            }\n            findResult.placeHolder = this.translate.instant('form.placeholder.telephone');\n        }, 0);\n    }\n\n    /**\n     * フォーム作成\n     */\n    private async createSettlingForm() {\n        const profile = this.environment.PROFILE;\n        this.settingForm = this.formBuilder.group({\n            theaterBranchCode: ['', [Validators.required]],\n            posId: [''],\n            printerType: [Models.Util.Printer.ConnectionType.None],\n            printerIpAddress: [''],\n            paymentCash: [''],\n            paymentCreditcard: [''],\n            paymentEmoney: [''],\n            paymentCode: [''],\n        });\n        profile.forEach(p => {\n            const validators: ValidatorFn[] = [];\n            if (p.required !== undefined && p.required) {\n                validators.push(Validators.required);\n            }\n            if (p.maxLength !== undefined) {\n                validators.push(Validators.maxLength(p.maxLength));\n            }\n            if (p.minLength !== undefined) {\n                validators.push(Validators.minLength(p.minLength));\n            }\n            if (p.pattern !== undefined) {\n                validators.push(Validators.pattern(p.pattern));\n            }\n            if (p.key === 'email') {\n                validators.push(Validators.email);\n            }\n            this.settingForm.addControl(p.key, new FormControl(p.value, validators));\n        });\n        const user = await this.actionService.user.getData();\n        if (user.theater !== undefined) {\n            this.settingForm.controls.theaterBranchCode.setValue(user.theater.branchCode);\n            this.changePosList();\n        }\n        if (user.pos !== undefined) {\n            this.settingForm.controls.posId.setValue(user.pos.id);\n        }\n        const customerContact = user.customerContact;\n        if (customerContact !== undefined) {\n            Object.keys(customerContact).forEach(key => {\n                const value = (<any>customerContact)[key];\n                if (value === undefined || this.settingForm.controls[key] === undefined) {\n                    return;\n                }\n                if (key === 'telephone') {\n                    this.settingForm.controls.telephone\n                        .setValue(new LibphonenumberFormatPipe().transform(value));\n                    return;\n                }\n                this.settingForm.controls[key].setValue(value);\n            });\n        }\n        if (user.printer !== undefined) {\n            this.settingForm.controls.printerType.setValue(user.printer.connectionType);\n            this.settingForm.controls.printerIpAddress.setValue(user.printer.ipAddress);\n        }\n        if (user.payment !== undefined && user.payment.cash !== undefined) {\n            this.settingForm.controls.paymentCash.setValue(user.payment.cash.ipAddress);\n        }\n        if (user.payment !== undefined && user.payment.creditcard !== undefined) {\n            this.settingForm.controls.paymentCreditcard.setValue(user.payment.creditcard.ipAddress);\n        }\n        if (user.payment !== undefined && user.payment.emoney !== undefined) {\n            this.settingForm.controls.paymentEmoney.setValue(user.payment.emoney.ipAddress);\n        }\n        if (user.payment !== undefined && user.payment.code !== undefined) {\n            this.settingForm.controls.paymentCode.setValue(user.payment.code.ipAddress);\n        }\n        console.log(this.settingForm);\n    }\n\n    /**\n     * POS変更\n     */\n    public changePosList() {\n        this.settingForm.controls.posId.setValue('');\n        const theaterBranchCode = this.settingForm.controls.theaterBranchCode.value;\n        if (theaterBranchCode === '') {\n            this.posList = [];\n            return;\n        }\n        const findResult = this.theaters.find(t => (t.branchCode === theaterBranchCode));\n        if (findResult === undefined) {\n            this.posList = [];\n            return;\n        }\n        this.posList = (findResult.hasPOS === undefined) ? [] : findResult.hasPOS;\n    }\n\n\n    /**\n     * 設定変更\n     */\n    public async onSubmit() {\n        Object.keys(this.settingForm.controls).forEach((key) => {\n            this.settingForm.controls[key].markAsTouched();\n        });\n        if (this.settingForm.invalid) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('setting.alert.validation')\n            });\n            return;\n        }\n        try {\n            const theaterBranchCode = this.settingForm.controls.theaterBranchCode.value;\n            const posId = this.settingForm.controls.posId.value;\n            const theater = this.theaters.find(t => (t.branchCode === theaterBranchCode));\n            if (theater === undefined) {\n                throw new Error('theater not found').message;\n            }\n            const pos = (theater.hasPOS === undefined) ? theater.hasPOS : theater.hasPOS.find(p => p.id === posId);\n            const payment = {\n                cash: (this.settingForm.controls.paymentCash.value === '')\n                    ? undefined\n                    : { ipAddress: this.settingForm.controls.paymentCash.value },\n                creditcard: (this.settingForm.controls.paymentCreditcard.value === '')\n                    ? undefined\n                    : { ipAddress: this.settingForm.controls.paymentCreditcard.value },\n                emoney: (this.settingForm.controls.paymentEmoney.value === '')\n                    ? undefined\n                    : { ipAddress: this.settingForm.controls.paymentEmoney.value },\n                code: (this.settingForm.controls.paymentCode.value === '')\n                    ? undefined\n                    : { ipAddress: this.settingForm.controls.paymentCode.value }\n            };\n            this.actionService.user.updateAll({\n                pos,\n                theater,\n                customerContact: {\n                    familyName: (this.settingForm.controls.familyName === undefined)\n                        ? undefined : this.settingForm.controls.familyName.value,\n                    givenName: (this.settingForm.controls.givenName === undefined)\n                        ? undefined : this.settingForm.controls.givenName.value,\n                    email: (this.settingForm.controls.email === undefined)\n                        ? undefined : this.settingForm.controls.email.value,\n                    telephone: (this.settingForm.controls.telephone === undefined)\n                        ? undefined : this.settingForm.controls.telephone.value.e164Number,\n                    // ? undefined : this.settingForm.controls.telephone.value,\n                    age: (this.settingForm.controls.age === undefined)\n                        ? undefined : this.settingForm.controls.age.value,\n                    address: (this.settingForm.controls.address === undefined)\n                        ? undefined : this.settingForm.controls.address.value,\n                    gender: (this.settingForm.controls.gender === undefined)\n                        ? undefined : this.settingForm.controls.gender.value\n                },\n                printer: {\n                    ipAddress: this.settingForm.controls.printerIpAddress.value,\n                    connectionType: this.settingForm.controls.printerType.value\n                },\n                payment: (payment.cash !== undefined\n                    || payment.creditcard !== undefined\n                    || payment.emoney !== undefined\n                    || payment.code !== undefined) ? payment : undefined\n            });\n            this.utilService.openAlert({\n                title: this.translate.instant('common.complete'),\n                body: this.translate.instant('setting.alert.success')\n            });\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    /**\n     * 印刷\n     */\n    public async print() {\n        const printer = {\n            connectionType: this.settingForm.controls.printerType.value,\n            ipAddress: this.settingForm.controls.printerIpAddress.value\n        };\n        try {\n            await this.actionService.order.print({ orders: [], printer });\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: `\n                <p class=\"mb-4\">${this.translate.instant('setting.alert.print')}</p>\n                    <div class=\"p-3 bg-light-gray select-text\">\n                    <code>${error}</code>\n                </div>`\n            });\n        }\n    }\n\n    /**\n     * プリンター変更\n     */\n    public changePrinterType() {\n        if (this.settingForm.controls.printerType.value === Models.Util.Printer.ConnectionType.StarBluetooth) {\n            this.settingForm.controls.printerIpAddress.setValue(this.translate.instant('setting.starBluetoothAddress'));\n        }\n    }\n\n    /**\n     * 必須判定\n     */\n    public isRequired(key: String) {\n        if (key === 'theaterBranchCode') {\n            return true;\n        }\n        return this.environment.PROFILE.find(p => p.key === key && p.required) !== undefined;\n    }\n\n    /**\n     * 購入者情報フォームのコントロールkeyを配列で返却\n     */\n    public getProfileFormKeys() {\n        return Object.keys(this.settingForm.controls).filter(key => {\n            return (key !== 'printerType'\n            && key !== 'printerIpAddress'\n            && !/payment/.test(key));\n        });\n    }\n\n    /**\n     * 追加特性項目取得\n     */\n    public getAdditionalProperty(key: string) {\n        return this.environment.PROFILE.find(p => /additionalProperty/.test(p.key) && p.key === key);\n    }\n\n    public async connection(paymentType: 'Cash') {\n        try {\n            if (paymentType === 'Cash') {\n                const ipAddress = this.settingForm.controls.paymentCash.value;\n                await this.epsonEPOSService.cashchanger.init({\n                    ipAddress\n                });\n                await this.epsonEPOSService.cashchanger.disconnect();\n            }\n            this.utilService.openAlert({\n                title: this.translate.instant('common.complete'),\n                body: this.translate.instant('setting.alert.connection')\n            });\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: `\n                <div class=\"p-3 bg-light-gray select-text\">\n                    <code>${error}</code>\n                </div>`\n            });\n        }\n    }\n\n}\n","<app-header [isClear]=\"true\">\n</app-header>\n<div class=\"contents scroll-horizontal\">\n    <div class=\"container p-3\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <form *ngIf=\"settingForm\" [formGroup]=\"settingForm\">\n                    <div class=\"p-3 bg-white\">\n                        <div *ngFor=\"let key of getProfileFormKeys()\" class=\"form-group row\">\n                            <div class=\"col-md-4 py-2 text-md-right \">\n                                <div class=\"d-inline-flex align-items-center\">\n                                    <p *ngIf=\"!getAdditionalProperty(key)\">{{ 'form.label.' + key | translate }}</p>\n                                    <p *ngIf=\"getAdditionalProperty(key)\">\n                                        {{ getAdditionalProperty(key)?.label | changeLanguage }}</p>\n                                    <p *ngIf=\"isRequired(key)\" class=\"badge badge-danger ml-2\">{{ 'form.required' | translate }}\n                                    </p>\n                                </div>\n                            </div>\n                            <div class=\"col-md-8\">\n                                <input *ngIf=\"key !== 'theaterBranchCode'\n                                    && key !== 'posId'\n                                    && key !== 'email' \n                                    && key !== 'telephone' \n                                    && key !== 'gender' \n                                    && getAdditionalProperty(key)?.inputType !== 'textarea'\" type=\"text\" class=\"form-control\"\n                                    [formControlName]=\"key\" [id]=\"key\" [placeholder]=\"'form.placeholder.' + key | translate\">\n                                <select *ngIf=\"key === 'theaterBranchCode'\" class=\"form-control\" [formControlName]=\"key\"\n                                    (change)=\"changePosList()\">\n                                    <option value=\"\">{{ 'setting.unselected' | translate }}</option>\n                                    <option *ngFor=\"let theater of theaters\" [value]=\"theater.branchCode\">\n                                        {{ theater.name | changeLanguage }}</option>\n                                </select>\n                                <select *ngIf=\"key === 'posId'\" class=\"form-control\" [formControlName]=\"key\">\n                                    <option value=\"\">{{ 'setting.unselected' | translate }}</option>\n                                    <option *ngFor=\"let pos of posList\" [value]=\"pos.id\">{{ pos.name }}</option>\n                                </select>\n        \n                                <input *ngIf=\"key === 'email'\" type=\"email\" class=\"form-control\" [formControlName]=\"key\"\n                                    [id]=\"key\" [placeholder]=\"'form.placeholder.' + key | translate\">\n                                <ngx-intl-tel-input *ngIf=\"key === 'telephone'\" #intlTelInput\n                                    [preferredCountries]=\"[CountryISO.Japan]\" [enableAutoCountrySelect]=\"false\"\n                                    [enablePlaceholder]=\"true\" [searchCountryFlag]=\"true\"\n                                    [searchCountryField]=\"[SearchCountryField.Iso2, SearchCountryField.Name]\"\n                                    [selectFirstCountry]=\"false\" [selectedCountryISO]=\"CountryISO.Japan\" [maxLength]=\"15\"\n                                    [tooltipField]=\"TooltipLabel.Name\" [phoneValidation]=\"true\" [separateDialCode]=\"false\"\n                                    inputId=\"telephone\" name=\"telephone\" formControlName=\"telephone\"></ngx-intl-tel-input>\n                                <select *ngIf=\"key === 'gender'\" class=\"form-control\" [formControlName]=\"key\" [id]=\"key\">\n                                    <option value=\"\">{{ 'form.option.unselected' | translate }}</option>\n                                    <option value=\"man\">{{ 'form.option.man' | translate }}</option>\n                                    <option value=\"woman\">{{ 'form.option.woman' | translate }}</option>\n                                </select>\n                                <textarea *ngIf=\"getAdditionalProperty(key)?.inputType === 'textarea'\" class=\"form-control\"\n                                    [formControlName]=\"key\" [id]=\"key\" placeholder=\"\"></textarea>\n                                <div *ngIf=\"settingForm.controls[key].invalid && settingForm.controls[key].touched\"\n                                    class=\"mt-2\">\n                                    <p *ngIf=\"settingForm.controls[key].errors?.required\" class=\"text-danger\">\n                                        {{ 'form.validation.required' | translate }}\n                                    </p>\n                                    <p *ngIf=\"settingForm.controls[key].errors?.maxlength\" class=\"text-danger\">\n                                        {{ 'form.validation.maxlength' | translate:{ value: settingForm.controls[key].errors?.maxlength.requiredLength } }}\n                                    </p>\n                                    <p *ngIf=\"settingForm.controls[key].errors?.email\" class=\"text-danger\">\n                                        {{ 'form.validation.email' | translate }}\n                                    </p>\n                                    <p *ngIf=\"settingForm.controls[key].errors?.validatePhoneNumber\" class=\"text-danger\">\n                                        {{ 'form.validation.telephone' | translate }}\n                                    </p>\n                                    <div *ngIf=\"key === 'familyName' || key === 'givenName'\">\n                                        <p *ngIf=\"(user | async)?.language === 'ja' && settingForm.controls[key].errors?.customPattern\"\n                                            class=\"text-danger\">\n                                            {{ 'form.validation.fullKana' | translate }}</p>\n                                        <p *ngIf=\"(user | async)?.language !== 'ja' && settingForm.controls[key].errors?.customPattern\"\n                                            class=\"text-danger\">\n                                            {{ 'form.validation.lowercaseLetters' | translate }}</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"row\">\n                                <p class=\"col-md-4 py-2 text-md-right\">{{ 'setting.printer.label' | translate }}</p>\n                                <div class=\"col-md-8\">\n                                    <select class=\"form-control\" formControlName=\"printerType\" (change)=\"changePrinterType()\">\n                                        <option *ngFor=\"let printer of printers\" [value]=\"printer.connectionType\">\n                                            {{ printer.name | translate }}</option>\n                                    </select>\n                                    <button\n                                        *ngIf=\"this.settingForm.controls.printerType.value && this.settingForm.controls.printerType.value !== connectionType.None\"\n                                        type=\"button\" class=\"btn btn-sm btn-primary py-2 mt-2\"\n                                        (click)=\"print()\">{{ 'setting.printer.testPrinting' | translate }}</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <div class=\"row\">\n                                <p class=\"col-md-4 py-2 text-md-right\">{{ 'setting.printer.ipAddress' | translate }}</p>\n                                <div class=\"col-md-8\">\n                                    <input type=\"text\" class=\"form-control\" formControlName=\"printerIpAddress\"\n                                        placeholder=\"0.0.0.0\">\n                                    <div *ngIf=\"settingForm.controls.printerIpAddress.invalid && settingForm.controls.printerIpAddress.touched\"\n                                        class=\"mt-2\">\n                                        <p *ngIf=\"settingForm.controls.printerIpAddress.errors?.required\" class=\"text-danger\">\n                                            {{ 'form.validation.required' | translate }}</p>\n                                    </div>\n                                    <p class=\"text-small mt-2\">\n                                        {{ 'setting.printer.ipAddressDescription' | translate }}\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n        \n                        <div class=\"form-group\">\n                            <div class=\"row align-items-center\">\n                                <p class=\"col-md-4 py-2 text-md-right\">{{ 'setting.payment.label' | translate }}</p>\n                                <div class=\"col-md-8\">\n                                    <div>\n                                        <p class=\"py-2\">{{ 'setting.payment.cash.label' | translate }}</p>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"paymentCash\"\n                                            placeholder=\"0.0.0.0\">\n                                        <div *ngIf=\"settingForm.controls.paymentCash.invalid && settingForm.controls.paymentCash.touched\"\n                                            class=\"mt-2\">\n                                            <p *ngIf=\"settingForm.controls.paymentCash.errors?.required\" class=\"text-danger\">\n                                                {{ 'form.validation.required' | translate }}</p>\n                                        </div>\n                                        <button type=\"button\" class=\"btn btn-primary mt-2\" (click)=\"connection('Cash')\">{{ 'setting.connection' | translate }}</button>\n                                    </div>\n                                    <div>\n                                        <p class=\"py-2\">{{ 'setting.payment.creditcard.label' | translate }}</p>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"paymentCreditcard\"\n                                            placeholder=\"0.0.0.0\">\n                                        <div *ngIf=\"settingForm.controls.paymentCreditcard.invalid && settingForm.controls.paymentCreditcard.touched\"\n                                            class=\"mt-2\">\n                                            <p *ngIf=\"settingForm.controls.paymentCreditcard.errors?.required\"\n                                                class=\"text-danger\">\n                                                {{ 'form.validation.required' | translate }}</p>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <p class=\"py-2\">{{ 'setting.payment.emoney.label' | translate }}</p>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"paymentEmoney\"\n                                            placeholder=\"0.0.0.0\">\n                                        <div *ngIf=\"settingForm.controls.paymentEmoney.invalid && settingForm.controls.paymentEmoney.touched\"\n                                            class=\"mt-2\">\n                                            <p *ngIf=\"settingForm.controls.paymentEmoney.errors?.required\" class=\"text-danger\">\n                                                {{ 'form.validation.required' | translate }}</p>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <p class=\"py-2\">{{ 'setting.payment.code.label' | translate }}</p>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"paymentCode\"\n                                            placeholder=\"0.0.0.0\">\n                                        <div *ngIf=\"settingForm.controls.paymentCode.invalid && settingForm.controls.paymentCode.touched\"\n                                            class=\"mt-2\">\n                                            <p *ngIf=\"settingForm.controls.paymentCode.errors?.required\" class=\"text-danger\">\n                                                {{ 'form.validation.required' | translate }}</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<app-footer>\n    <div class=\"mr-auto\">\n        <button type=\"button\" class=\"btn btn-outline-primary\"\n                [routerLink]=\"environment.BASE_URL\">{{ 'setting.prev' | translate }}</button>\n    </div>\n    <div>\n        <button type=\"submit\" [disabled]=\"isLoading | async\" class=\"btn btn-primary\"\n        (click)=\"onSubmit()\">{{ 'setting.next' | translate }}</button>\n    </div>\n</app-footer>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\nimport { SettingComponent } from './components/pages/setting/setting.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: BaseComponent,\n  children: [\n    { path: '', component: SettingComponent }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { SettingComponent } from './components/pages/setting/setting.component';\nimport { SettingRoutingModule } from './setting-routing.module';\n\n\n@NgModule({\n  declarations: [\n    SettingComponent\n  ],\n  imports: [\n    CommonModule,\n    SettingRoutingModule,\n    SharedModule,\n  ]\n})\nexport class SettingModule { }\n"],"sourceRoot":"webpack:///"}