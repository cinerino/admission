{"version":3,"sources":["./app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.ts","./app/modules/inquiry/components/pages/inquiry-confirm/inquiry-confirm.component.html","./app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.ts","./app/modules/inquiry/components/pages/inquiry-input/inquiry-input.component.html","./app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.ts","./app/modules/inquiry/components/pages/inquiry-print/inquiry-print.component.html","./app/modules/inquiry/inquiry-routing.module.ts","./app/modules/inquiry/inquiry.module.ts"],"names":[],"mappings":"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","file":"modules-inquiry-inquiry-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { factory } from '@cinerino/sdk';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as moment from 'moment';\nimport { Observable } from 'rxjs';\nimport { Functions } from '../../../../..';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { ActionService, ReservationService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-confirm',\n    templateUrl: './inquiry-confirm.component.html',\n    styleUrls: ['./inquiry-confirm.component.scss']\n})\nexport class InquiryConfirmComponent implements OnInit {\n    public order: Observable<reducers.IOrderState>;\n    public user: Observable<reducers.IUserState>;\n    public isLoading: Observable<boolean>;\n    public error: Observable<string | null>;\n    public moment: typeof moment = moment;\n    public eventOrders: Functions.Purchase.IEventOrder[];\n    public orderStatus: typeof factory.orderStatus = factory.orderStatus;\n    public environment = getEnvironment();\n    private timer: any;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private router: Router,\n        private actionService: ActionService,\n        private utilService: UtilService,\n        private reservationService: ReservationService,\n        private translate: TranslateService\n    ) { }\n\n    public ngOnInit() {\n        this.eventOrders = [];\n        this.order = this.store.pipe(select(reducers.getOrder));\n        this.user = this.store.pipe(select(reducers.getUser));\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.error = this.store.pipe(select(reducers.getError));\n        this.order.subscribe((value) => {\n            if (value.order === undefined) {\n                this.router.navigate(['/error']);\n                return;\n            }\n            const order = value.order;\n            this.eventOrders = Functions.Purchase.order2EventOrders({ order });\n        }).unsubscribe();\n        if (this.environment.INQUIRY_PRINT_WAIT_TIME !== '') {\n            const time = Number(this.environment.INQUIRY_PRINT_WAIT_TIME);\n            this.timer = setTimeout(() => {\n                this.router.navigate(['/inquiry/input']);\n            }, time);\n        }\n    }\n\n    /**\n     * 印刷\n     */\n    public async print() {\n        const today = moment().format('YYYYMMDD');\n        const limit = moment(today)\n            .add(this.environment.INQUIRY_PRINT_EXPIRED_VALUE, this.environment.INQUIRY_PRINT_EXPIRED_UNIT)\n            .format('YYYYMMDD');\n        const findResult = this.eventOrders.find(o => moment(o.event.startDate).format('YYYYMMDD') < limit);\n        if (findResult !== undefined) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.confirm.alert.printExpired')\n            });\n            return;\n        }\n        if (this.timer !== undefined) {\n            clearTimeout(this.timer);\n        }\n        try {\n            const orderData = await this.actionService.order.getData();\n            const user = await this.actionService.user.getData();\n            if (orderData.order === undefined) {\n                this.router.navigate(['/error']);\n                return;\n            }\n            if (user.printer === undefined) {\n                throw new Error('printer undefined');\n            }\n            // 二重発券防止\n            const reservationNumbers = orderData.order.acceptedOffers.map((o) => {\n                if (o.itemOffered.typeOf !== factory.chevre.reservationType.EventReservation) {\n                    return '';\n                }\n                const itemOffered = <factory.chevre.reservation.IReservation<\n                    factory.chevre.reservationType.EventReservation\n                >>o.itemOffered;\n                return itemOffered.reservationNumber;\n            });\n            const searchResult = await this.reservationService.search({\n                typeOf: factory.chevre.reservationType.EventReservation,\n                reservationNumbers\n            });\n            const checkedInResult = searchResult.data.filter(r => r.checkedIn);\n            if (checkedInResult.length > 0) {\n                this.utilService.openAlert({\n                    title: this.translate.instant('common.error'),\n                    body: this.translate.instant('inquiry.confirm.alert.doubleTicketing')\n                });\n                return;\n            }\n            // 印刷\n            const orders = [orderData.order];\n            const pos = user.pos;\n            const printer = user.printer;\n            await this.actionService.order.print({ orders, pos, printer });\n            this.router.navigate(['/inquiry/print']);\n        } catch (error) {\n            console.error(error);\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: `\n                <p class=\"mb-4\">${this.translate.instant('inquiry.confirm.alert.print')}</p>\n                    <div class=\"p-3 bg-light-gray select-text\">\n                    <code>${error}</code>\n                </div>`\n            });\n        }\n    }\n\n}\n","<div class=\"contents-width mx-auto px-3 py-5\">\n    <div class=\"mb-4\">\n        <h2 class=\"text-large mb-4 text-center font-weight-bold\">{{ 'inquiry.confirm.title' | translate }}</h2>\n\n        <div class=\"mb-4 px-3 py-2 bg-white\">\n            <div class=\"row align-items-center\">\n                <p class=\"col-4\">\n                    {{ 'common.confirmationNumber' | translate }}</p>\n                <p class=\"col-8 text-large text-info font-weight-bold text-md-left text-right\">\n                    {{ (order | async)?.order.confirmationNumber }}\n                </p>\n            </div>\n        </div>\n        <div *ngFor=\"let eventOrder of eventOrders\" class=\"mb-4 bg-white p-3\">\n            <div class=\"mb-3\">\n                <div class=\"mb-1\">\n                    <p class=\"font-weight-bold text-large\">{{ eventOrder.event.name | changeLanguage }}</p>\n                    <p class=\"text-small\"\n                        *ngIf=\"eventOrder.event.superEvent.headline && (eventOrder.event.superEvent.headline | changeLanguage)\">\n                        {{ eventOrder.event.superEvent.headline | changeLanguage }}</p>\n                    <p class=\"text-small\"\n                        *ngIf=\"eventOrder.event.superEvent.description && (eventOrder.event.superEvent.description | changeLanguage)\">{{\n                        eventOrder.event.superEvent.description | changeLanguage }}</p>\n                </div>\n                <p class=\"mb-1\">\n                    {{ eventOrder.event.startDate | formatDate: 'MM/DD(ddd) HH:mm' }}-{{ eventOrder.event.endDate | formatDate: 'HH:mm' }}\n                </p>\n                <p class=\"text-small mb-1\">\n                    <span class=\"theater-name\">{{ eventOrder.event.superEvent.location.name | changeLanguage }}</span>\n                    <span class=\"screen-name\">&nbsp;/&nbsp;<span *ngIf=\"eventOrder.event.location.address | changeLanguage\" class=\"mr-2\">{{ eventOrder.event.location.address | changeLanguage }}</span>{{ eventOrder.event.location.name | changeLanguage }}</span>\n                    <span\n                        *ngIf=\"eventOrder.event.workPerformed?.duration && moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() > 0\">\n                        &nbsp;/&nbsp;<span\n                            class=\"mr-1\">{{ 'common.duration' | translate }}</span>{{ moment.duration(eventOrder.event.workPerformed?.duration).asMinutes() }}{{ 'common.date.minute' | translate }}\n                    </span>\n                </p>\n            </div>\n            <hr class=\"mb-3\">\n            <app-item-list [acceptedOffers]=\"eventOrder.data\"></app-item-list>\n        </div>\n\n\n        <div class=\"mb-4 px-3 bg-white\">\n            <div class=\"py-3 border-bottom border-gray\">\n                <div class=\"row align-items-center\">\n                    <p class=\"mb-2 mb-md-0 col-md-4\">{{ 'common.customerName' | translate }}</p>\n                    <p class=\"col-md-8\">{{ (order | async)?.order.customer.familyName }}\n                        {{ (order | async)?.order.customer.givenName }}</p>\n                </div>\n            </div>\n            <div class=\"py-3 border-bottom border-gray\">\n                <div class=\"row align-items-center\">\n                    <p class=\"mb-2 mb-md-0 col-md-4\">{{ 'common.email' | translate }}</p>\n                    <p class=\"col-md-8\">{{ (order | async)?.order.customer.email }}</p>\n                </div>\n            </div>\n            <div class=\"py-3\">\n                <div class=\"row align-items-center\">\n                    <p class=\"mb-2 mb-md-0 col-md-4\">{{ 'common.telephone' | translate }}</p>\n                    <p class=\"col-md-8\">{{ (order | async)?.order.customer.telephone | libphonenumberFormat }}</p>\n                </div>\n            </div>\n            <!-- <div class=\"py-3\" *ngIf=\"(order | async)?.order.price > 0\">\n                <div class=\"row align-items-center\">\n                    <p class=\"mb-2 mb-md-0 col-md-4\">{{ 'common.paymentMethod' | translate }}</p>\n                    <p class=\"col-md-8\">クレジットカード</p>\n                </div>\n            </div> -->\n        </div>\n    </div>\n\n    <div class=\"buttons mx-auto text-center\">\n        <button *ngIf=\"environment.INQUIRY_PRINT\"\n            [disabled]=\"(order | async)?.order.orderStatus !== orderStatus.OrderDelivered\" type=\"button\"\n            class=\"btn btn-primary btn-block py-3 mb-3\" (click)=\"print()\"\n            [disabled]=\"isLoading | async\">{{ 'inquiry.confirm.next' | translate }}</button>\n        <button type=\"button\" class=\"btn btn-outline-primary btn-block py-3\"\n            routerLink=\"/inquiry/input\">{{ 'inquiry.confirm.prev' | translate }}</button>\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { select, Store } from '@ngrx/store';\nimport { TranslateService } from '@ngx-translate/core';\nimport * as libphonenumber from 'libphonenumber-js';\nimport { Observable } from 'rxjs';\nimport { getEnvironment } from '../../../../../../environments/environment';\nimport { ActionService, UtilService } from '../../../../../services';\nimport * as reducers from '../../../../../store/reducers';\n\n@Component({\n    selector: 'app-inquiry-input',\n    templateUrl: './inquiry-input.component.html',\n    styleUrls: ['./inquiry-input.component.scss']\n})\nexport class InquiryInputComponent implements OnInit {\n    public inquiryForm: FormGroup;\n    public environment = getEnvironment();\n    public isLoading: Observable<boolean>;\n\n    constructor(\n        private store: Store<reducers.IState>,\n        private formBuilder: FormBuilder,\n        private utilService: UtilService,\n        private actionService: ActionService,\n        private router: Router,\n        private translate: TranslateService\n    ) { }\n\n    public ngOnInit() {\n        this.isLoading = this.store.pipe(select(reducers.getLoading));\n        this.createInquiryForm();\n    }\n\n    /**\n     * 照会フォーム作成\n     */\n    private createInquiryForm() {\n        const TEL_MAX_LENGTH = 15;\n        const TEL_MIN_LENGTH = 9;\n        this.inquiryForm = this.formBuilder.group({\n            confirmationNumber: ['', [\n                Validators.required,\n                Validators.pattern(/^[0-9]+$/)\n            ]],\n            telephone: ['', [\n                Validators.required,\n                Validators.maxLength(TEL_MAX_LENGTH),\n                Validators.minLength(TEL_MIN_LENGTH),\n                (control: AbstractControl): ValidationErrors | null => {\n                    const field = control.root.get('telephone');\n                    if (field !== null) {\n                        if (field.value === '') {\n                            return null;\n                        }\n                        const parsedNumber = (new RegExp(/^\\+/).test(field.value))\n                            ? libphonenumber.parse(field.value)\n                            : libphonenumber.parse(field.value, 'JP');\n                        if (parsedNumber.phone === undefined) {\n                            return { telephone: true };\n                        }\n                        const isValid = libphonenumber.isValidNumber(parsedNumber);\n                        if (!isValid) {\n                            return { telephone: true };\n                        }\n                    }\n\n                    return null;\n                }\n            ]]\n        });\n    }\n\n    /**\n     * 照会\n     */\n    public async onSubmit() {\n        Object.keys(this.inquiryForm.controls).forEach((key) => {\n            this.inquiryForm.controls[key].markAsTouched();\n        });\n        this.inquiryForm.controls.confirmationNumber.setValue((<HTMLInputElement>document.getElementById('confirmationNumber')).value);\n        this.inquiryForm.controls.telephone.setValue((<HTMLInputElement>document.getElementById('telephone')).value);\n        if (this.inquiryForm.invalid) {\n            return;\n        }\n        try {\n            const confirmationNumber = this.inquiryForm.controls.confirmationNumber.value;\n            const telephone = this.inquiryForm.controls.telephone.value;\n            await this.actionService.order.inquiry({\n                confirmationNumber,\n                customer: { telephone }\n            });\n            this.router.navigate(['/inquiry/confirm']);\n        } catch (error) {\n            this.utilService.openAlert({\n                title: this.translate.instant('common.error'),\n                body: this.translate.instant('inquiry.input.validation')\n            });\n        }\n    }\n\n    /**\n     * 確認番号変更\n     */\n    public changeConfirmationNumber(value: string) {\n        this.inquiryForm.controls.confirmationNumber.setValue(value);\n    }\n\n    /**\n     * 電話番号変更\n     */\n    public changeTelephone(value: string) {\n        this.inquiryForm.controls.telephone.setValue(value);\n    }\n\n}\n","<div class=\"contents-width mx-auto px-3 py-5\">\n    <form [formGroup]=\"inquiryForm\">\n        <div class=\"mb-4\">\n            <h2 class=\"text-large mb-4 text-center font-weight-bold\">{{ 'inquiry.input.title' | translate }}</h2>\n            <p class=\"mb-4 text-md-center\" [innerHTML]=\"'inquiry.input.read' | translate\"></p>\n\n            <div class=\"inquiry-form mx-auto p-3 bg-white\">\n\n                <div class=\"form-group\">\n                    <label class=\"mb-2\" for=\"\">{{ 'common.confirmationNumber' | translate }}</label>\n                    <app-numeric-keypad *ngIf=\"environment.INPUT_KEYPAD\" inputType=\"string\"\n                        [inputValue]=\"inquiryForm.controls.confirmationNumber.value\"\n                        (change)=\"changeConfirmationNumber($event)\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"confirmationNumber\"\n                            id=\"confirmationNumber\" [placeholder]=\"'form.placeholder.confirmationNumber' | translate\"\n                            readonly>\n                    </app-numeric-keypad>\n                    <input *ngIf=\"!environment.INPUT_KEYPAD\" type=\"text\" class=\"form-control\"\n                        formControlName=\"confirmationNumber\" id=\"confirmationNumber\"\n                        [placeholder]=\"'form.placeholder.confirmationNumber' | translate\">\n                    <div *ngIf=\"inquiryForm.controls.confirmationNumber.invalid && inquiryForm.controls.confirmationNumber.touched\"\n                        class=\"mt-2\">\n                        <p *ngIf=\"inquiryForm.controls.confirmationNumber.errors?.required\" class=\"text-danger\">\n                            {{ 'form.validation.required' | translate }}</p>\n                        <p *ngIf=\"inquiryForm.controls.confirmationNumber.errors?.pattern\" class=\"text-danger\">\n                            {{ 'form.validation.number' | translate }}</p>\n                    </div>\n                </div>\n                <div class=\"form-group mb-0\">\n                    <label class=\"mb-2\" for=\"\">{{ 'common.telephone' | translate }}</label>\n                    <app-numeric-keypad *ngIf=\"environment.INPUT_KEYPAD\" inputType=\"telephone\"\n                        [inputValue]=\"inquiryForm.controls.telephone.value\" (change)=\"changeTelephone($event)\">\n                        <input type=\"password\" class=\"form-control\" formControlName=\"telephone\" id=\"telephone\"\n                            [placeholder]=\"'form.placeholder.telephone' | translate\" readonly>\n                    </app-numeric-keypad>\n                    <input *ngIf=\"!environment.INPUT_KEYPAD\" type=\"password\" class=\"form-control\"\n                        formControlName=\"telephone\" id=\"telephone\"\n                        [placeholder]=\"'form.placeholder.telephone' | translate\">\n                    <div *ngIf=\"inquiryForm.controls.telephone.invalid && inquiryForm.controls.telephone.touched\"\n                        class=\"mt-2\">\n                        <p *ngIf=\"inquiryForm.controls.telephone.errors?.required\" class=\"text-danger\">\n                            {{ 'form.validation.required' | translate }}</p>\n                        <p *ngIf=\"inquiryForm.controls.telephone.errors?.minlength\" class=\"text-danger\">\n                            {{ 'form.validation.minlength' | translate: { value: inquiryForm.controls.telephone.errors?.minlength.requiredLength } }}\n                        </p>\n                        <p *ngIf=\"inquiryForm.controls.telephone.errors?.maxlength\" class=\"text-danger\">\n                            {{ 'form.validation.maxlength' | translate: { value: inquiryForm.controls.telephone.errors?.maxlength.requiredLength } }}\n                        </p>\n                        <p *ngIf=\"inquiryForm.controls.telephone.errors?.telephone\" class=\"text-danger\">\n                            {{ 'form.validation.telephone' | translate }}</p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n        <div class=\"buttons mx-auto text-center\">\n            <button type=\"submit\" [disabled]=\"isLoading | async\" class=\"btn btn-primary btn-block py-3 mb-3\"\n                (click)=\"onSubmit()\">{{ 'inquiry.input.next' | translate }}</button>\n            <button type=\"button\" class=\"btn btn-outline-primary btn-block py-3\"\n                routerLink=\"/purchase/root\">{{ 'inquiry.input.prev' | translate }}</button>\n        </div>\n    </form>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { getEnvironment } from '../../../../../../environments/environment';\n\n@Component({\n    selector: 'app-inquiry-print',\n    templateUrl: './inquiry-print.component.html',\n    styleUrls: ['./inquiry-print.component.scss']\n})\nexport class InquiryPrintComponent implements OnInit, OnDestroy {\n    public environment = getEnvironment();\n    private timer: any;\n\n    constructor(\n        private router: Router\n    ) { }\n\n    /**\n     * 初期化\n     */\n    public ngOnInit() {\n        if (this.environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME === '') {\n            return;\n        }\n        const time = Number(this.environment.INQUIRY_PRINT_SUCCESS_WAIT_TIME);\n        this.timer = setTimeout(() => {\n            this.router.navigate(['/inquiry/input']);\n        }, time);\n    }\n\n    /**\n     * 破棄\n     */\n    public ngOnDestroy() {\n        if (this.timer === undefined) {\n            return;\n        }\n        clearTimeout(this.timer);\n    }\n\n}\n","<div class=\"contents-width mx-auto px-3 py-5\">\n    <div class=\"mb-4\">\n        <h2 class=\"text-large mb-4 text-center font-weight-bold\">{{ 'inquiry.print.title' | translate }}</h2>\n        <p class=\"mb-4 text-md-center\" [innerHTML]=\"'inquiry.print.read' | translate\"></p>\n    </div>\n\n    <div class=\"buttons mx-auto text-center\">\n        <button type=\"button\" class=\"btn btn-primary btn-block py-3\" routerLink=\"/inquiry/input\">\n            {{ 'inquiry.print.prev' | translate }}\n        </button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardService, SettingGuardService } from '../../canActivates';\nimport { BaseComponent } from '../shared/components/pages/base/base.component';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\n\n\nconst routes: Routes = [{\n  path: '',\n  component: BaseComponent,\n  canActivate: [AuthGuardService, SettingGuardService],\n  children: [\n    { path: 'input', component: InquiryInputComponent },\n    { path: 'confirm', component: InquiryConfirmComponent },\n    { path: 'print', component: InquiryPrintComponent }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InquiryRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from '../shared/shared.module';\nimport { InquiryConfirmComponent } from './components/pages/inquiry-confirm/inquiry-confirm.component';\nimport { InquiryInputComponent } from './components/pages/inquiry-input/inquiry-input.component';\nimport { InquiryPrintComponent } from './components/pages/inquiry-print/inquiry-print.component';\nimport { InquiryRoutingModule } from './inquiry-routing.module';\n\n\n@NgModule({\n  declarations: [\n    InquiryInputComponent,\n    InquiryConfirmComponent,\n    InquiryPrintComponent,\n  ],\n  imports: [\n    CommonModule,\n    InquiryRoutingModule,\n    SharedModule,\n  ]\n})\nexport class InquiryModule { }\n"],"sourceRoot":"webpack:///"}